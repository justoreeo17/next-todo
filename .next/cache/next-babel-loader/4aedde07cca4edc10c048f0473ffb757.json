{"ast":null,"code":"var _jsxFileName = \"/Users/justoreeo/next-todo-list/pages/App/Home.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Note from \"../components/Note\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleKeyPress\", event => {\n      if (event.key === \"Enter\") {\n        let noteArr = this.state.notes;\n        noteArr.push(this.state.noteText);\n        this.setState({\n          noteText: ''\n        });\n      }\n    });\n\n    this.state = {\n      noteText: '',\n      notes: []\n    };\n  }\n\n  updateNoteText(noteText) {\n    this.setState({\n      noteText: noteText.target.value\n    });\n  }\n\n  addNote() {\n    if (this.state.noteText === '') {\n      return;\n    }\n\n    let noteArr = this.state.notes;\n    noteArr.push(this.state.noteText);\n    this.setState({\n      noteText: ''\n    });\n    this.textInput.focus();\n  }\n\n  deleteNote(index) {\n    let noteArr = this.state.notes;\n    noteArr.splice(index, 1);\n    this.setState({\n      notes: noteArr\n    });\n  }\n\n  render() {\n    let notes = this.state.notes.map((val, key) => {\n      return __jsx(Note, {\n        key: key,\n        text: val,\n        deleteMethod: () => this.deleteNote(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    });\n    return __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Todo App\"), notes, __jsx(\"button\", {\n      onClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"DELETE\"), __jsx(\"input\", {\n      placeholder: \"Enter Notes\",\n      type: \"text\",\n      className: \"input\",\n      ref: input => {\n        this.textInput = input;\n      },\n      value: this.state.noteText,\n      onChange: noteText => this.updateNoteText(noteText),\n      onKeyPress: this.handleKeyPress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.addNote.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"ADD\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/justoreeo/next-todo-list/pages/App/Home.js"],"names":["React","Component","Note","Home","constructor","props","event","key","noteArr","state","notes","push","noteText","setState","updateNoteText","target","value","addNote","textInput","focus","deleteNote","index","splice","render","map","val","input","handleKeyPress","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Note from \"../components/Note\";\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state= {\n      noteText: '',\n      notes: [],\n    }\n  }\n\n  updateNoteText(noteText){\n    this.setState({noteText: noteText.target.value})\n  }\n  \n  addNote() {\n    if (this.state.noteText === '') {return}\n    let noteArr = this.state.notes;\n    noteArr.push(this.state.noteText);\n    this.setState({ noteText: ''});\n    this.textInput.focus();\n  }\n\n  handleKeyPress = (event) => {\n    if(event.key === \"Enter\"){\n      let noteArr = this.state.notes;\n      noteArr.push(this.state.noteText);\n      this.setState({ noteText: ''});\n    }\n  }\n\n  deleteNote (index){\n    let noteArr = this.state.notes;\n    noteArr.splice(index, 1);\n    this.setState({ notes: noteArr })\n  }\n\n  render() {\n\n    let notes = this.state.notes.map((val, key) => {\n      return <Note key={key} text={val}\n      deleteMethod={ () => this.deleteNote(key) }\n       />\n    })\n\n    return (\n      <div className=\"container\">\n        <div className=\"header\">Todo App</div>\n        {notes}\n        <button onClick>DELETE</button>\n        <input placeholder=\"Enter Notes\" type=\"text\" className=\"input\"\n        ref={((input) => {this.textInput = input})}\n        value={this.state.noteText}\n        onChange={noteText => this.updateNoteText(noteText)}\n        onKeyPress={this.handleKeyPress.bind(this)}\n        />\n        <button onClick={this.addNote.bind(this)}>ADD</button>\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}