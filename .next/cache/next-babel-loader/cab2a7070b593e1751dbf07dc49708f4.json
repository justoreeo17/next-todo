{"ast":null,"code":"var _jsxFileName = \"/Users/justoreeo/next-todo-list/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nexport default (() => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState(['task 1', 'task 2']);\n  const {\n    0: todo,\n    1: setTodo\n  } = useState(['']);\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    value: todo,\n    onChange: e => setTodo.e.target.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => setTodos([...todos, todo]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"ADD\"), todos.map(todo => __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, todo)));\n});","map":{"version":3,"sources":["/Users/justoreeo/next-todo-list/pages/index.js"],"names":["useState","todos","setTodos","todo","setTodo","e","target","value","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,gBAAe,MAAM;AACjB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAqBF,QAAQ,CAAC,CAChC,QADgC,EAEhC,QAFgC,CAAD,CAAnC;AAIA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAmBJ,QAAQ,CAAC,CAC9B,EAD8B,CAAD,CAAjC;AAIA,SACI,4BACI;AAAO,IAAA,KAAK,EAAEG,IAAd;AAAoB,IAAA,QAAQ,EAAGE,CAAD,IAASD,OAAO,CAACC,CAAR,CAAUC,MAAV,CAAiBC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAML,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,IAAX,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGKF,KAAK,CAACO,GAAN,CAAUL,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADH,CAHL,CADJ;AASH,CAlBD","sourcesContent":["import { useState } from 'react';\n\nexport default () => {\n    const [todos, setTodos ] = useState([\n        'task 1',\n        'task 2',\n    ])\n    const [todo, setTodo ] = useState([\n        ''\n    ])\n\n    return (\n        <>\n            <input value={todo} onChange={(e) => ( setTodo.e.target.value )}/>\n            <button onClick={() => setTodos([...todos, todo ])}>ADD</button>\n            {todos.map(todo => (\n                <h1>{todo}</h1>\n            ))}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}