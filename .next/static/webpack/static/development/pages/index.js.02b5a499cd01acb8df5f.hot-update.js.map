{"version":3,"file":"static/webpack/static/development/pages/index.js.02b5a499cd01acb8df5f.hot-update.js","sources":["webpack:///./pages/App/Home.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Note from \"../components/Note\";\nimport { injectGlobal } from '../';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state= {\n      noteText: '',\n      notes: [],\n    }\n  }\n\n  updateNoteText(noteText){\n    this.setState({noteText: noteText.target.value})\n  }\n  \n  addNote() {\n    if (this.state.noteText === '') {return}\n    let noteArr = this.state.notes;\n    noteArr.push(this.state.noteText);\n    this.setState({ noteText: ''});\n    this.textInput.focus();\n  }\n\n  handleKeyPress = (event) => {\n    if(event.key === \"Enter\"){\n      let noteArr = this.state.notes;\n      noteArr.push(this.state.noteText);\n      this.setState({ noteText: ''});\n    }\n  }\n\n  deleteNote (index){\n    let noteArr = this.state.notes;\n    noteArr.splice(index, 1);\n    this.setState({ notes: noteArr })\n  }\n\n  render() {\n\n    let notes = this.state.notes.map((val, key) => {\n      return <Note key={key} text={val}\n      deleteMethod={ () => this.deleteNote(key) }\n       />\n    })\n\n    return (\n      <div className=\"container\">\n        <div className=\"header\">Todo App</div>\n        {notes}\n        <div className=\"button\" onClick={this.addNote.bind(this)}>+</div>\n        <input placeholder=\"Enter Notes\" type=\"text\" className=\"input\"\n        ref={((input) => {this.textInput = input})}\n        value={this.state.noteText}\n        onChange={noteText => this.updateNoteText(noteText)}\n        onKeyPress={this.handleKeyPress.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAzBA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAUA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAzDA;AACA;AA2DA;;;;A","sourceRoot":""}